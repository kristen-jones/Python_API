{"name": "Partial update: Update the booking name", "status": "broken", "statusDetails": {"message": "TypeError: unhashable type: 'list'", "trace": "create_token = <tests.test.integration.test_integration_tc1.TestIntegrationBooking object at 0x0000027302AECB00>\nget_booking_id = 3976\n\n    @pytest.mark.positive\n    @allure.title(\"Partial update: Update the booking name\")\n    @allure.description(\"Update the name of the booking that was created\")\n    def test_update_booking(create_token, get_booking_id):\n        booking_id = get_booking_id\n        token = create_token\n        patch_url = APIConstants.url_patch_put_delete(booking_id=booking_id)\n        updated_fields = [\"firstname\", \"lastname\"]\n        #updated_name_payload = payload_update_booking(updated_fields)\n        response = patch_requests(\n            url=patch_url,\n            headers=Util().common_header_put_delete_patch_cookie(token=token),\n>           payload=payload_update_booking(updated_fields),\n            auth=None,\n            in_json=False\n        )\n\ntest_integration_tc1.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfields_to_update = (['firstname', 'lastname'],)\npayload_options = {'additionalneeds': 'Lunch', 'bookingdates': {'checkin': '2003-06-21', 'checkout': '1981-07-05'}, 'depositpaid': <boun...name': <bound method Provider.first_name of <faker.providers.person.en_US.Provider object at 0x000002737FB0C6E0>>, ...}\n\n    def payload_update_booking(*fields_to_update):\n        payload_options = {\n            \"firstname\": faker.first_name,\n            \"lastname\": faker.last_name,\n            \"totalprice\": faker.random_int(min=100, max=10000),\n            \"depositpaid\": faker.boolean,\n            \"bookingdates\": {\n                \"checkin\": faker.date(),\n                \"checkout\": faker.date()\n            },\n            \"additionalneeds\":faker.random_element(elements=(\"Breakfast\", \"Parking\", \"Lunch\"))\n        }\n    \n        # Generate the payload using a dictionary comprehension\n>       payload = {field: payload_options[field] for field in fields_to_update if field in payload_options}\nE       TypeError: unhashable type: 'list'\n\n..\\..\\..\\src\\helpers\\payload_manager.py:54: TypeError"}, "description": "Update the name of the booking that was created", "start": 1716728213508, "stop": 1716728213509, "uuid": "f7bedd20-cbe7-4240-a770-4c7d3f49258e", "historyId": "c01a604f6a844fd2e28e4c982dfcc6e5", "testCaseId": "c01a604f6a844fd2e28e4c982dfcc6e5", "fullName": "tests.test.integration.test_integration_tc1.TestIntegrationBooking#test_update_booking", "labels": [{"name": "tag", "value": "positive"}, {"name": "parentSuite", "value": "tests.test.integration"}, {"name": "suite", "value": "test_integration_tc1"}, {"name": "subSuite", "value": "TestIntegrationBooking"}, {"name": "host", "value": "ASUS15KJ"}, {"name": "thread", "value": "1344-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test.integration.test_integration_tc1"}]}